{
    "openapi": "3.0.0",
    "info": {
        "title": "POC",
        "version": "1.0.0",
        "description": "API Server",
        "license": {
            "name": "ISC"
        },
        "contact": {
            "name": "Dheeraj Budhiraja",
            "email": "itsdheerajbudhiraja@gmail.com"
        }
    },
    "paths": {
        "/docs/swagger/{docsApiKey}/swagger.json": {
            "get": {
                "summary": "Download JSON of Swagger Docs",
                "tags": [
                    "docs"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "docsApiKey",
                        "description": "DOCS API KEY",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Swagger Docs for REST API endpoints"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/docs/swagger/{docsApiKey}": {
            "get": {
                "summary": "Swagger Docs UI",
                "tags": [
                    "docs"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "docsApiKey",
                        "description": "DOCS API KEY",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Swagger Docs for REST API endpoints"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/docs/typedoc/{docsApiKey}": {
            "get": {
                "summary": "Typescript docs",
                "tags": [
                    "docs"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "docsApiKey",
                        "description": "DOCS API KEY",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Typescript docs"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/docs/test-report/{docsApiKey}": {
            "get": {
                "summary": "Test Report",
                "tags": [
                    "docs"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "docsApiKey",
                        "description": "DOCS API KEY",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Test Report"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/users/image/{userId}": {
            "post": {
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "userProfilePic": {
                                        "type": "string",
                                        "format": "base64"
                                    }
                                }
                            }
                        }
                    }
                },
                "operationId": "SetUserProfilePic",
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiSuccessResponse_User_"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiFailureResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiFailureResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiFailureResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiFailureResponse"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Users"
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "userId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ]
            }
        },
        "/": {
            "get": {
                "summary": "Retrieves the status of server",
                "tags": [
                    "health"
                ],
                "responses": {
                    "200": {
                        "description": "Server is Up"
                    },
                    "404": {
                        "description": "Server is Down"
                    }
                }
            }
        },
        "/users": {
            "post": {
                "operationId": "CreateUser",
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiSuccessResponse_User_"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiFailureResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiFailureResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiFailureResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiFailureResponse"
                                }
                            }
                        }
                    }
                },
                "description": "Create new user in database",
                "tags": [
                    "Users"
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserCreationParams"
                            }
                        }
                    }
                }
            },
            "get": {
                "operationId": "GetAllUsers",
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiSuccessResponse__data-User-Array--total_elements-number__"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiFailureResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiFailureResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiFailureResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiFailureResponse"
                                }
                            }
                        }
                    }
                },
                "description": "Retrieves all users from database",
                "tags": [
                    "Users"
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "parameters": []
            }
        },
        "/users/{userId}": {
            "get": {
                "operationId": "GetUserById",
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiSuccessResponse_User_"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiFailureResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiFailureResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiFailureResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiFailureResponse"
                                }
                            }
                        }
                    }
                },
                "description": "Retrieves user by id from database",
                "tags": [
                    "Users"
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "userId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ]
            }
        }
    },
    "components": {
        "examples": {},
        "headers": {},
        "parameters": {},
        "requestBodies": {},
        "responses": {},
        "schemas": {
            "ApiFailureResponse": {
                "properties": {
                    "message": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "Failure"
                        ],
                        "nullable": false
                    }
                },
                "required": [
                    "message",
                    "status"
                ],
                "type": "object"
            },
            "UUIDv4": {
                "type": "string",
                "example": "52907745-7672-470e-a803-a2f8feb52944",
                "description": "Stringified UUIDv4.\nSee [RFC 4112](https://tools.ietf.org/html/rfc4122)",
                "pattern": "[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}"
            },
            "User": {
                "properties": {
                    "_id": {
                        "$ref": "#/components/schemas/UUIDv4"
                    },
                    "name": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "mobile": {
                        "type": "string"
                    },
                    "pic": {
                        "type": "string"
                    }
                },
                "required": [
                    "name",
                    "email",
                    "mobile"
                ],
                "type": "object",
                "additionalProperties": false
            },
            "ApiSuccessResponse_User_": {
                "properties": {
                    "result": {
                        "$ref": "#/components/schemas/User"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "Success"
                        ],
                        "nullable": false
                    }
                },
                "required": [
                    "result",
                    "status"
                ],
                "type": "object"
            },
            "Pick_User.Exclude_keyofUser._id__": {
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "mobile": {
                        "type": "string"
                    },
                    "pic": {
                        "type": "string"
                    }
                },
                "required": [
                    "name",
                    "email",
                    "mobile"
                ],
                "type": "object",
                "description": "From T, pick a set of properties whose keys are in the union K"
            },
            "Omit_User._id_": {
                "$ref": "#/components/schemas/Pick_User.Exclude_keyofUser._id__",
                "description": "Construct a type with the properties of T except for those in type K."
            },
            "UserCreationParams": {
                "$ref": "#/components/schemas/Omit_User._id_"
            },
            "ApiSuccessResponse__data-User-Array--total_elements-number__": {
                "properties": {
                    "result": {
                        "properties": {
                            "total_elements": {
                                "type": "number",
                                "format": "double"
                            },
                            "data": {
                                "items": {
                                    "$ref": "#/components/schemas/User"
                                },
                                "type": "array"
                            }
                        },
                        "required": [
                            "total_elements",
                            "data"
                        ],
                        "type": "object"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "Success"
                        ],
                        "nullable": false
                    }
                },
                "required": [
                    "result",
                    "status"
                ],
                "type": "object"
            }
        },
        "securitySchemes": {
            "bearerAuth": {
                "type": "apiKey",
                "name": "Authorization",
                "in": "header"
            },
            "apiKey": {
                "type": "apiKey",
                "name": "X-API-KEY",
                "in": "header"
            }
        }
    },
    "tags": [
        {
            "name": "Users",
            "description": "Operations about users",
            "externalDocs": {
                "description": "User CRUD operations Docs",
                "url": "http://swagger.io"
            }
        }
    ],
    "servers": [
        {
            "url": "http://localhost:3000/"
        }
    ]
}